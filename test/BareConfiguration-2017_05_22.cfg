//As Test8 but with no debugging information and with no DAC
+EPICS_CA = {
    Class = EPICS::EPICSCAClient
	StackSize = 1048576
	CPUs = 0x1
    AutoStart = 0
	+PV_STATUS = {
		Class = EPICS::EPICSPV
		PVName = "FALCON:FAST:STATUS"
		PVType = uint32
   	}    
	+PV_COMMAND = {
		Class = EPICS::EPICSPV
		PVName = "FALCON:FAST:STATUS_CMD"
		PVType = uint32
		Event = {
    		Destination = StateMachine
    		PVValue = Function
    		FunctionMap = {{"1", "ACQUIRE"}, {"0", "STOP"}}
		}
   	}    
	+PV_ERROR = {
		Class = EPICS::EPICSPV
		PVName = "FALCON:FAST:ERROR"
		PVType = uint32
	}
	+PV_ERROR_RST = {
		Class = EPICS::EPICSPV
		PVName = "FALCON:FAST:ERROR_RST"
		PVType = uint32
		Event = {
    		Destination = StateMachine
    		PVValue = Ignore
    		Function = "RESET"
        }
	}
}
+LoggerService = {	
	Class = LoggerService
	CPUs = 0x1
	StackSize = 32768 
	NumberOfLogPages = 128 
	+SysLogger = {
		Class = SysLogger
		Format = "EtOoFmC"
		PrintKeys = 1
		Ident = "Falcon"
	}
}
+BaseLib2Wrapper = {
	Class = BaseLib2Wrapper
	BaseLib2Config = "
	+AdapterMessageHandler = {
    	Class = BaseLib2Adapter::AdapterMessageHandler
    }
	DefaultCPUs = 1
	+WEB = {
		Class = HttpGroupResource
		+BROWSE = {
			Title = \"Http Object Browser\"
        	Class = HttpGCRCBrowser
        	AddReference = {StateMachine StateMachineMARTe2ReadBack OBJBROWSE THRBROWSE HTTPSignalServer WebStatistic }
    	}
	}
	+HTTPSERVER = {
    	Class = HttpService
    	Port = 8084
    	HttpRelayURL = \"ignore.me:1234\"
    	VerboseLevel = 10
    	Root = WEB
	}
	+OBJBROWSE = {
    	Class = HttpClassListResource
	}
	+THRBROWSE = {
    	Class = HttpThreadListResource
	}
	+MatlabSignalServer = {
    	Class = MATLABHandler
	}
	+FlotPlot={
		Class = FlotPlot
	}
	+HTTPSignalServer={
    	Class = SignalServer
	}
	+StateMachine = {
		Class = StateMachine
		VerboseLevel = 10
		+INITIAL = {
			Class = StateMachineState
			StateCode = 0x0
			+START = {
            	Class = StateMachineEvent
            	NextState = IDLE
            	Value = START
            	+STARTALL = {
                	Class = MessageDeliveryRequest
                	Sender = StateMachine
                	Destinations = \"HTTPSERVER\"
                	MsecTimeOut = 1000
                	Flags = NoReply
                	Message = {
                    	Class = Message
                    	Content = START
                	}
            	}            	           
        	}
		}
		+IDLE = {
			Class = StateMachineState
			StateCode = 0x1
			+ACQUIRE = {
            	Class = StateMachineEvent
            	NextState = ACQUIRING
                Code = 2
                +GO_TO_STATE_RUN_MARTe2 = {
                    Class = MessageEnvelope
                    Destination = AdapterMessageHandler
                    +MESSAGE = {
                        Class = Message
                        Content = StateMachine::ACQUIRE
                    }
                }
            }
		}		
		+ACQUIRING = {
			Class = StateMachineState
			StateCode = 0x2
			+STOP = {
            	Class = StateMachineEvent
            	NextState = IDLE
                Code = 1
            	+GO_TO_STATE_IDLE_MARTe2 = {
            		Class = MessageEnvelope
                	Destination = AdapterMessageHandler
                	+MESSAGE = {
                   		Class = Message
                   		Content = StateMachine::STOP
                	}
            	}
            }
            +ERROR = {
            	Class = StateMachineEvent
            	NextState = ERROR
            	Value = ERROR
                +GO_TO_STATE_IDLE_ERROR = {
            		Class = MessageEnvelope
                	Destination = AdapterMessageHandler
                	+MESSAGE = {
                   		Class = Message
                   		Content = StateMachine::ERROR
                	}
            	}
            }
		}
		+ERROR = {
			Class = StateMachineState
			StateCode = 0x3
			+RESET = {
            	Class = StateMachineEvent
            	NextState = IDLE
                Code = 1
            	+GO_TO_STATE_IDLE_MARTe2 = {
            		Class = MessageEnvelope
                	Destination = AdapterMessageHandler
                	+MESSAGE = {
                   		Class = Message
                   		Content = StateMachine::RESET
                	}
            	}
            }
		}
    }
	+StateMachineMARTe2ReadBack = {
		Class = StateMachine
		VerboseLevel = 10
		+INITIAL = {
			Class = StateMachineState
			StateCode = 0x0
			+START = {
            	Class = StateMachineEvent
            	NextState = IDLE
            	Value = START
        	}
		}
		+IDLE = {
			Class = StateMachineState
			StateCode = 0x1
			+ACQUIRE = {
            	Class = StateMachineEvent
            	NextState = ACQUIRING
            	Value = ACQUIRE
            }
            +ERROR = {
            	Class = StateMachineEvent
            	NextState = ERROR
            	Value = ERROR
            }
		}		
		+ACQUIRING = {
			Class = StateMachineState
			StateCode = 0x2
			+STOP = {
            	Class = StateMachineEvent
            	NextState = IDLE
            	Value = STOP
            }
            +ERROR = {
            	Class = StateMachineEvent
            	NextState = ERROR
            	Value = ERROR
            }
		}
		+ERROR = {
			Class = StateMachineState
			StateCode = 0x3
			+RESET = {
            	Class = StateMachineEvent
            	NextState = IDLE
                Value = RESET
            }
		}
    }"
}
+StateMachine = {
	Class = StateMachine
	+INITIAL = {
    	Class = ReferenceContainer    	
    	+START = {
    		Class = StateMachineEvent
    		NextState = "IDLE"
			NextStateError = "IDLE"
    		Timeout = 0
    		+StartBaseLib2 = {
				Class = Message
 				Destination = "BaseLib2Wrapper"
    			Function = "StateMachine::START"
			}
    		+StartBaseLib2ReadBack = {
				Class = Message
 				Destination = "BaseLib2Wrapper"
    			Function = "StateMachineMARTe2ReadBack::START"
			}
    		+StartCAClient = {
				Class = Message
 				Destination = "EPICS_CA"
    			Function = "Start"
         		Mode = ExpectsReply
			}
			+ChangeToIdleMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Idle
        		}
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
    	}    	
	}
	+IDLE = {
    	Class = ReferenceContainer
    	+ACQUIRE = {
    		Class = StateMachineEvent
    		NextState = "ACQUIRING"
    		NextStateError = "ERROR"
            Timeout = 0                        
        	+OpenTreeMsg = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriter"
        		Function = OpenTree
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
        	}
        	+OpenTreeSlowMsg = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriterSlow"
        		Function = OpenTree
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
        	}           
            +PrepareChangeToAcquiringMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Acquiring
        		}
        	}
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
    		+StateMachibeBaseLib2ReadBack = {
				Class = Message
 				Destination = "BaseLib2Wrapper"
    			Function = "StateMachineMARTe2ReadBack::ACQUIRE"
			}
        }
        +STOP = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "IDLE"
        }
        +ERROR = {
    		Class = StateMachineEvent
    		NextState = "ERROR"
    		NextStateError = "ERROR"
        }
    }
    +ACQUIRING = {
    	Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +SetStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_STATUS"
        		Function = CAPut
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 1
        		}
            } 
        }
    	+ERROR = {
    		Class = StateMachineEvent
    		NextState = "ERROR"
    		NextStateError = "ERROR"
        } 
    	+STOP = {
    		Class = StateMachineEvent
    		NextState = "IDLE"
    		NextStateError = "ERROR"
            Timeout = 0                                	
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+MessageFlush = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriter"
        		Function = FlushSegments
        		Mode = ExpectsReply
        	}
        	+MessageFlushSlow = {
        		Class = Message
        		Destination = "FalconApp.Data.MDSWriterSlow"
        		Function = FlushSegments
        		Mode = ExpectsReply
        	}
        	+PrepareChangeToIdleMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Idle
        		}
        	}
            +SetStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_STATUS"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
            +SetErrorStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
    		+StateMachibeBaseLib2ReadBack = {
				Class = Message
 				Destination = "BaseLib2Wrapper"
    			Function = "StateMachineMARTe2ReadBack::STOP"
			}
        }
        +ACQUIRE = {
            Class = StateMachineEvent
            NextState = "ACQUIRING"
            NextStateError = "ACQUIRING"
        }
	}
    +ERROR = {
    	Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
        	+PrepareChangeToErrorMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Error
        		}
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
            +SetStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_STATUS"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
            +SetErrorPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 1
        		}
            } 
    		+StateMachibeBaseLib2ReadBack = {
				Class = Message
 				Destination = "BaseLib2Wrapper"
    			Function = "StateMachineMARTe2ReadBack::ERROR"
			}
        }
    	+RESET = {
    		Class = StateMachineEvent
    		NextState = "IDLE"
    		NextStateError = "IDLE"
            Timeout = 0                                	
        	+StopCurrentStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StopCurrentStateExecution
        		Mode = ExpectsReply
        	}
            +ResetErrorPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            }
        	+PrepareChangeToIdleMsg = {
        		Class = Message
        		Destination = FalconApp
        		Mode = ExpectsReply
        		Function = PrepareNextState
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = Idle
        		}
        	}
        	+StartNextStateExecutionMsg = {
        		Class = Message
        		Destination = FalconApp
        		Function = StartNextStateExecution
        		Mode = ExpectsReply
        	}
            +SetErrorStatusPV = {
        		Class = Message
        		Destination = "EPICS_CA.PV_ERROR"
        		Function = CAPut
        		Mode = ExpectsReply
        		+Parameters = {
        			Class = ConfigurationDatabase
        			param1 = 0
        		}
            } 
    		+StateMachibeBaseLib2ReadBack = {
				Class = Message
 				Destination = "BaseLib2Wrapper"
    			Function = "StateMachineMARTe2ReadBack::RESET"
			}
        }
    	+ACQUIRE = {
    		Class = StateMachineEvent
    		NextState = "ERROR"
    		NextStateError = "ERROR"
        }
    	+STOP = {
    		Class = StateMachineEvent
    		NextState = "ERROR"
    		NextStateError = "ERROR"
        }
    	+ERROR = {
    		Class = StateMachineEvent
    		NextState = "ERROR"
    		NextStateError = "ERROR"
        }

	}
}
$FalconApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMADC = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = NI6368_0
                    Type = uint32
                }
                RawTime = {
                    DataSource = NI6368_0
                    Type = uint32
                }
                ADC0_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
                    Frequency = 1000
                }
                ADC1_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC2_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC3_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC4_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC5_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC6_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC7_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC8_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC9_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC10_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC11_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC12_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC13_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC14_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}
				ADC15_0 = {
                	DataSource = NI6368_0
                	Samples = 2000
				}		
				Idle_Thread1_CycleTime = {                	
                	DataSource = Timings
                	Alias = "Idle.Thread1_CycleTime"
                	Type = uint32         	
                }
                Acquiring_Thread1_CycleTime = {                	
                	DataSource = Timings
                	Alias = "Acquiring.Thread1_CycleTime"
                	Type = uint32         	
                }				
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                RawTime = {
                    DataSource = DDB1
                    Type = uint32                   
                }
                ADC0_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000     
					NumberOfDimensions = 1       	
                }  
                ADC1_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1            	
                }
                ADC2_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC3_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC4_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC5_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC6_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC7_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC8_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC9_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC10_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC11_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC12_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC13_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC14_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC15_0 = {
                	DataSource = DDB1
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}		
				Idle_Thread1_CycleTime = {                	
                	DataSource = DDB1                	
                	Type = uint32         	
                }	
                Running_Thread1_CycleTime = {                	
                	DataSource = DDB1
                	Type = uint32         	
                }				                
            }
        }
        +GAMFilterDownsampling = {
            Class = FilterDownsamplingGAM
            SamplingFrequency = 2000000
            CutOffFrequency = 200
            InputSignals = {
                ADC0_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
                }
                ADC1_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC2_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC3_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC4_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC5_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC6_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC7_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC8_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC9_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC10_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC11_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC12_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC13_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC14_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}
				ADC15_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
                    NumberOfDimensions = 1
				}					
            }
            OutputSignals = {                
                ADC0_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1     
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
                }  
                ADC1_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1   
					Gain = 1.52587890625e-04         	
                }
                ADC2_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC3_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC4_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC5_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC6_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC7_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC8_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC9_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC10_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC11_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC12_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC13_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC14_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
				ADC15_0_filtered = {
                	DataSource = DDB1
                	Type = float32
					NumberOfElements = 1
					NumberOfDimensions = 1
					Gain = 1.52587890625e-04
				}
            }
        }          
        +GAMTRMask = {
        	Class = TriggerMaskGAM
        	Mask = 0x1
        	InputSignals = {
        		PORT0 = {
                    DataSource = DDB1
                    Type = uint32
                }
			}
			OutputSignals = {
				RawTrigger = {
					DataSource = DDB1										
                    Type = uint8
				}
			}
        }	
        +GAMTC = {
            Class = TimeCorrectionGAM
        	AssertCycles = 3
            Threshold = 1000
            SignalPeriod = 500e-9
        	InputSignals = {
                ADC0_0 = {
                    DataSource = DDB1
					NumberOfElements = 2000     
					NumberOfDimensions = 1
                    Type = int16
                }
				RawTrigger = {
					DataSource = DDB1										
                    Type = uint8
				}
			}
			OutputSignals = {
        		Time = {
                    DataSource = DDB1
                    Type = uint32
                }
				Trigger = {
					DataSource = DDB1										
                    Type = uint8
				}
				TriggerSlow = {
					DataSource = DDB1										
                    Type = uint8
				}
			}
        }
        +GAMMDS = {
        	Class = IOGAM
            InputSignals = {
            	Trigger = {
            		DataSource = DDB1
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
            	Time = {
                	DataSource = DDB1
                	NumberOfElements = 1
					NumberOfDimensions = 1
                }
                ADC0_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
                }
                ADC1_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC2_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC3_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC4_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC5_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC6_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC7_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC8_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC9_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC10_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC11_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC12_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC13_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC14_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC15_0 = {
                	DataSource = DDB1
                	NumberOfElements = 2000
					NumberOfDimensions = 1
				}				
            }
            OutputSignals = {
            	Trigger = {
            		DataSource = MDSWriter
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
            	Time = {
                	DataSource = MDSWriter
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
                ADC0F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000     
					NumberOfDimensions = 1       	
                }  
                ADC1F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1            	
                }
                ADC2F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC3F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC4F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC5F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC6F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC7F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC8F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC9F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC10F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC11F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC12F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC13F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC14F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}
				ADC15F = {
                	DataSource = MDSWriter
                	Type = int16
					NumberOfElements = 2000
					NumberOfDimensions = 1
				}					
            }
        }
        +GAMMDSSlow = {
        	Class = IOGAM
            InputSignals = {
                TriggerSlow = {
            		DataSource = DDB1
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	DataSource = DDB1
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
				PORT0 = {
                    DataSource = DDB1
                    Type = uint32
                    NumberOfElements = 1
					NumberOfDimensions = 1
                }                
				Counter = {
                	DataSource = DDB1
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
                ADC0_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC1_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC2_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC3_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC4_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC5_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC6_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC7_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC8_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC9_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC10_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC11_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC12_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC13_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC14_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC15_0_filtered = {
                	DataSource = DDB1
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                Running_Thread1_CycleTime = {                	
                	DataSource = DDB1
                	Type = uint32         	
                }				                
            }
            OutputSignals = {
                TriggerSlow = {
            		DataSource = MDSWriterSlow
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	DataSource = MDSWriterSlow
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
				PORT0 = {
                    DataSource = MDSWriterSlow
                    Type = uint32
                    NumberOfElements = 1
					NumberOfDimensions = 1
                }                
				Counter = {
                	DataSource = MDSWriterSlow
                	Type = uint32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC0S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC1S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC2S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC3S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC4S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC5S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC6S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC7S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC8S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC9S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC10S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC11S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC12S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }
                ADC13S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }		
                ADC14S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }        
				ADC15S = {
                	DataSource = MDSWriterSlow
                	Type = float32		
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }      
                Running_Thread1_CycleTime = {                	
                	DataSource = MDSWriterSlow
                	Type = uint32         	
                	NumberOfElements = 1
					NumberOfDimensions = 1			
                }				                

            }
        }
        +BL2WebStatistic = {
			Class = BaseLib2GAM
            InputSignals = {
            	Counter = {
                	DataSource = DDB1
                    Type = uint32
				}
				RawTime = {
                	DataSource = DDB1
                    Type = uint32
				}
				Time = {
                	DataSource = DDB1
                    Type = uint32
				}
				PORT0 = {
                    DataSource = DDB1
                    Type = uint32
                }
                Idle_Thread1_CycleTime = {
                    DataSource = DDB1
                    Type = uint32
                }
                Running_Thread1_CycleTime = {
                    DataSource = DDB1
                    Type = uint32
                }
                GAMADC_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMADC_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMADC_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMSDNPub_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMSDNPub_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMSDNPub_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMMDS_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
				GAMFilterDownsampling_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMFilterDownsampling_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMFilterDownsampling_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMWF1_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMWF1_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMWF1_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMTR1_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMTR1_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMTR1_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMDI_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMDI_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMDI_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
				BL2WebStatistic_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
			}            
            GAMName = "WebStatistic"
			GAMFunctionNumber = 0x00010000
            BaseLib2Config = "
            	+WebStatistic = {
            		Class = WebStatisticGAM
            		Signals = {
            			Counter = {
                    		SignalName = Counter
                    		SignalType = uint32
                		}
                		RawTime = {
                			SignalName = RawTime
                    		SignalType = uint32
                		}
                		Time = {
                			SignalName = Time
                    		SignalType = uint32
                		}
						PORT0 = {
                			SignalName = PORT0
                    		SignalType = uint32
                		}
						Idle_Thread1_CycleTime = {
                			SignalName = Idle_Thread1_CycleTime
                    		SignalType = uint32
                		}
                		Running_Thread1_CycleTime = {
                			SignalName = Running_Thread1_CycleTime
                    		SignalType = uint32
                		}
                        GAMADC_ReadTime = {
                			SignalName = GAMADC_ReadTime 
                    		SignalType = uint32
                		}
                		GAMADC_ExecTime = {
                			SignalName = GAMADC_ExecTime 
                    		SignalType = uint32
                		}
                		GAMADC_WriteTime = {
                			SignalName = GAMADC_WriteTime 
                    		SignalType = uint32
                		}
                        GAMSDNPub_ReadTime = {
                			SignalName = GAMSDNPub_ReadTime 
                    		SignalType = uint32
                		}
                		GAMSDNPub_ExecTime = {
                			SignalName = GAMSDNPub_ExecTime 
                    		SignalType = uint32
                		}
                		GAMSDNPub_WriteTime = {
                			SignalName = GAMSDNPub_WriteTime 
                    		SignalType = uint32
                		}
                		GAMDI_ReadTime = {
                			SignalName = GAMDI_ReadTime 
                    		SignalType = uint32
                		}
                		GAMDI_ExecTime = {
                			SignalName = GAMDI_ExecTime 
                    		SignalType = uint32
                		}
                		GAMDI_WriteTime = {
                			SignalName = GAMDI_WriteTime 
                    		SignalType = uint32
                		}   
                		GAMFilterDownsampling_ReadTime = {
                			SignalName = GAMFilterDownsampling_ReadTime 
                    		SignalType = uint32
                		}
                		GAMFilterDownsampling_ExecTime = {
                			SignalName = GAMFilterDownsampling_ExecTime 
                    		SignalType = uint32
                		}
                		GAMFilterDownsampling_WriteTime = {
                			SignalName = GAMFilterDownsampling_WriteTime 
                    		SignalType = uint32
                		}               		                	
						GAMWF1_ReadTime = {
                			SignalName = GAMWF1_ReadTime 
                    		SignalType = uint32
                		}
                		GAMWF1_ExecTime = {
                			SignalName = GAMWF1_ExecTime 
                    		SignalType = uint32
                		}
                		GAMWF1_WriteTime = {
                			SignalName = GAMWF1_WriteTime 
                    		SignalType = uint32
                		}
                		GAMTR1_ReadTime = {
                			SignalName = GAMTR1_ReadTime 
                    		SignalType = uint32
                		}
                		GAMTR1_ExecTime = {
                			SignalName = GAMTR1_ExecTime 
                    		SignalType = uint32
                		}
                		GAMTR1_WriteTime = {
                			SignalName = GAMTR1_WriteTime 
                    		SignalType = uint32
                		}
                		GAMMDS_WriteTime = {
                			SignalName = GAMMDS_WriteTime 
                    		SignalType = uint32
                		}
                		BL2WebStatistic_ExecTime = {
                			SignalName = BL2WebStatistic_ExecTime 
                    		SignalType = uint32
                		}
            		}
            	}"
		}
        +GAMDI = {
            Class = IOGAM
            InputSignals = {
                PORT0 = {
                    DataSource = NI6368_DIO_0
                    Type = uint32
                }
            }
            OutputSignals = {
                PORT0 = {
                    DataSource = DDB1
                    Type = uint32
                }                
            }
		}		
        +GAMSDNPub= {
        	Class = IOGAM
            InputSignals = {
                TriggerSlow = {
            		DataSource = DDB1
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	DataSource = DDB1
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                }
            }
            OutputSignals = {
                TriggerSlow = {
            		DataSource = SDNPub
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	DataSource = SDNPub
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1       	
                    Trigger = 1
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
        	Class = GAMDataSource
       	}        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +NI6368_0 = {
            Class = NI6368::NI6368ADC
            DeviceName = "/dev/pxie-6368"
            BoardId = 0
			DMABufferSize = 1000
            ClockSampleSource = "INTERNALTIMING"
            ClockSamplePolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
            ClockConvertSource = "INTERNALTIMING"
			ClockConvertPolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
			ScanIntervalCounterSource = "COUNTER_TB3"
			ScanIntervalCounterPolarity = "RISING_EDGE"
			ScanIntervalCounterPeriod = 50
			ScanIntervalCounterDelay = 2 
			CPUs = 8
			RealTimeMode = 1
            Signals = {
            	Counter = {
            		Type = uint32
            	}
                RawTime = {
                	Type = uint32
            	}
            	ADC0_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 0
            	}
            	ADC1_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 1          
            	}
            	ADC2_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 2          
            	}
            	ADC3_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 3          
            	}
            	ADC4_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 4          
            	}
            	ADC5_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 5          
            	}
            	ADC6_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 6          
            	}
            	ADC7_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 7          
            	}
            	ADC8_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 8          
            	}
            	ADC9_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 9          
            	}
            	ADC10_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 10          
            	}
            	ADC11_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 11          
            	}
            	ADC12_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 12     
            	}
            	ADC13_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 13          
            	}
            	ADC14_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 14         
            	}
            	ADC15_0 = {
            		InputRange = 10
            		Type = int16
            		ChannelId = 15          
            	}            	  
            }
        }
        +NI6368_DIO_0 = {
        	Class = NI6368::NI6368DIO
        	DeviceName = "/dev/pxie-6368"
        	BoardId = 0
        	InputPortMask = 0x1
        	OutputPortMask = 0x2
        	ClockSampleSource = "INTERNAL"
        	ClockSamplePolarity = "ACTIVE_HIGH_OR_RISING_EDGE"
        	ScanIntervalCounterSource = "COUNTER_TB3"
        	ScanIntervalCounterPeriod = 50
        	ScanIntervalCounterDelay = 2
        	StartTriggerSource = "SW_PULSE"
        	UpdateCounterSource = "UI_TC"
        	UpdateCounterPolarity = "RISING_EDGE"
        	UpdateIntervalCounterSource = "TB3"
        	UpdateIntervalCounterPolarity = "RISING_EDGE"
        	UpdateIntervalCounterPeriodDivisor = 100000
			UpdateIntervalCounterDelay = 2
        	Signals = {
        		PORT0 = {
        			Type = uint32
        		}
        	}
        }
        +MDSWriter = {
        	Class = MDSWriter::MDSWriter
			NumberOfBuffers = 5000
        	CPUMask = 2
        	StackSize = 10000000
        	TreeName = "falcon_fast"
        	StoreOnTrigger = 1
        	EventName = "updatejScope"
        	TimeRefresh = 5
        	NumberOfPreTriggers = 40
			NumberOfPostTriggers = 40
			Signals = {
				Trigger = {
					SignalType = uint8
				}
				Time = {
					SignalType = uint32
					TimeSignal = 1
				}
				ADC0F = {
        			NodeName = "ADC0.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC0.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC1F = {
        			NodeName = "ADC1.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC1.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC2F = {
        			NodeName = "ADC2.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC2.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC3F = {
        			NodeName = "ADC3.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC3.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC4F = {
        			NodeName = "ADC4.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC4.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC5F = {
        			NodeName = "ADC5.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC5.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC6F = {
        			NodeName = "ADC6.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC6.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC7F = {
        			NodeName = "ADC7.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC7.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC8F = {
        			NodeName = "ADC8.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC8.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC9F = {
        			NodeName = "ADC9.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC9.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC10F = {
        			NodeName = "ADC10.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC10.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC11F = {
        			NodeName = "ADC11.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC11.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC12F = {
        			NodeName = "ADC12.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC12.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC13F = {
        			NodeName = "ADC13.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC13.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC14F = {
        			NodeName = "ADC14.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC14.FSTD"
        			MinMaxResampleFactor = 1000 
        		}
        		ADC15F = {
        			NodeName = "ADC15.FAST"
        			Period = 500e-9
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "ADC15.FSTD"
        			MinMaxResampleFactor = 1000 
        		}        				       
        	}
            +Messages = {
                Class = ReferenceContainer
                +TreeRuntimeError = {
                    Class = Message
                    Destination = StateMachine
                    Function = "ERROR"
                    Mode = ExpectsReply
                }

            }
        }
        +MDSWriterSlow = {
        	Class = MDSWriter::MDSWriter
			NumberOfBuffers = 5000
        	CPUMask = 2
        	StackSize = 10000000
        	TreeName = "falcon_fast"
        	StoreOnTrigger = 1
        	EventName = "updatejScope"
        	NumberOfPreTriggers = 0
			NumberOfPostTriggers = 0
        	TimeRefresh = 5
			Signals = {
				TriggerSlow = {
					SignalType = uint8
				}
				Time = {
					SignalType = uint32
					TimeSignal = 1
					NodeName = TIME
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "TIMED"
        			MinMaxResampleFactor = 10
        			SamplePhase = 1
				}
				PORT0 = {
        			NodeName = PORT0
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "PORT0D"
        			MinMaxResampleFactor = 10
        			SamplePhase = 1
        		}
        		Counter = {
        			NodeName = COUNTER
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			DecimatedNodeName = "COUNTERD"
        			MinMaxResampleFactor = 10
        			SamplePhase = 1
        		}
        		ADC0S = {
        			NodeName = "ADC0.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1 //Notice that the filter actually outputs the data related to the computation of 2000 samples which were already acquired and thus the output time is delay by 1ms 
        			DecimatedNodeName = "ADC0.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC1S = {
        			NodeName = "ADC1.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC1.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC2S = {
        			NodeName = "ADC2.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC2.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC3S = {
        			NodeName = "ADC3.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC3.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC4S = {
        			NodeName = "ADC4.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC4.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC5S = {
        			NodeName = "ADC5.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC5.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC6S = {
        			NodeName = "ADC6.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC6.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC7S = {
        			NodeName = "ADC7.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC7.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC8S = {
        			NodeName = "ADC8.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC8.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC9S = {
        			NodeName = "ADC9.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC9.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC10S = {
        			NodeName = "ADC10.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC10.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC11S = {
        			NodeName = "ADC11.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC11.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC12S = {
        			NodeName = "ADC12.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC12.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC13S = {
        			NodeName = "ADC13.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC13.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC14S = {
        			NodeName = "ADC14.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC14.SLWD"
        			MinMaxResampleFactor = 10
        		}
        		ADC15S = {
        			NodeName = "ADC15.SLOW"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "ADC15.SLWD"
        			MinMaxResampleFactor = 10
        		}
                Running_Thread1_CycleTime = {
        			NodeName = "DEBUG.CYCLET"
        			Period = 1e-3
        			MakeSegmentAfterNWrites = 1000
        			SamplePhase = 1  
        			DecimatedNodeName = "DEBUG.CYCLETD"
        			MinMaxResampleFactor = 10
        		}
        	}
            +Messages = {
                Class = ReferenceContainer
                +TreeRuntimeError = {
                    Class = Message
                    Destination = StateMachine
                    Function = "ERROR"
                    Mode = ExpectsReply
                }
            }
        }
        +SDNPub = {
            Class = SDN::SDNPublisher
            Topic = FalconFast
            Interface = eth0
            Signals = {
                TriggerSlow = {
            		Type = uint8
                	NumberOfElements = 1
					NumberOfDimensions = 1
            	}
				Time = {
                	Type = uint32
					NumberOfElements = 1     
					NumberOfDimensions = 1
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +Idle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMADC GAMDI GAMSDNPub GAMFilterDownsampling GAMTRMask GAMTC BL2WebStatistic }
                }
            }
        }
        +Acquiring = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMADC GAMDI GAMSDNPub GAMFilterDownsampling GAMTRMask GAMTC GAMMDS GAMMDSSlow BL2WebStatistic }
                }
            }
        }
        +Error = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x4
                    Functions = {GAMADC GAMDI}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
